# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: TableService.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.timestamp_pb2
import google.protobuf.empty_pb2
from . import Players_pb2
from . import Betting_pb2
from . import Table_pb2
from . import TableService_pb2


class CashGameTableServiceBase(abc.ABC):

    @abc.abstractmethod
    async def create(self, stream: 'grpclib.server.Stream[TableService_pb2.TableSettings, TableService_pb2.RequestStatus]') -> None:
        pass

    @abc.abstractmethod
    async def subscribe(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, TableService_pb2.TableUpdate]') -> None:
        pass

    @abc.abstractmethod
    async def start(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, TableService_pb2.RequestStatus]') -> None:
        pass

    @abc.abstractmethod
    async def stop(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, TableService_pb2.RequestStatus]') -> None:
        pass

    @abc.abstractmethod
    async def addPlayer(self, stream: 'grpclib.server.Stream[Players_pb2.PlayerJoinRequest, TableService_pb2.RequestStatus]') -> None:
        pass

    @abc.abstractmethod
    async def removePlayer(self, stream: 'grpclib.server.Stream[Players_pb2.PlayerRemoveRequest, TableService_pb2.RequestStatus]') -> None:
        pass

    @abc.abstractmethod
    async def takeAction(self, stream: 'grpclib.server.Stream[Betting_pb2.BettingActionRequest, TableService_pb2.RequestStatus]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/poker.proto.CashGameTableService/create': grpclib.const.Handler(
                self.create,
                grpclib.const.Cardinality.UNARY_UNARY,
                TableService_pb2.TableSettings,
                TableService_pb2.RequestStatus,
            ),
            '/poker.proto.CashGameTableService/subscribe': grpclib.const.Handler(
                self.subscribe,
                grpclib.const.Cardinality.UNARY_STREAM,
                google.protobuf.empty_pb2.Empty,
                TableService_pb2.TableUpdate,
            ),
            '/poker.proto.CashGameTableService/start': grpclib.const.Handler(
                self.start,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                TableService_pb2.RequestStatus,
            ),
            '/poker.proto.CashGameTableService/stop': grpclib.const.Handler(
                self.stop,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                TableService_pb2.RequestStatus,
            ),
            '/poker.proto.CashGameTableService/addPlayer': grpclib.const.Handler(
                self.addPlayer,
                grpclib.const.Cardinality.UNARY_UNARY,
                Players_pb2.PlayerJoinRequest,
                TableService_pb2.RequestStatus,
            ),
            '/poker.proto.CashGameTableService/removePlayer': grpclib.const.Handler(
                self.removePlayer,
                grpclib.const.Cardinality.UNARY_UNARY,
                Players_pb2.PlayerRemoveRequest,
                TableService_pb2.RequestStatus,
            ),
            '/poker.proto.CashGameTableService/takeAction': grpclib.const.Handler(
                self.takeAction,
                grpclib.const.Cardinality.UNARY_UNARY,
                Betting_pb2.BettingActionRequest,
                TableService_pb2.RequestStatus,
            ),
        }


class CashGameTableServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.create = grpclib.client.UnaryUnaryMethod(
            channel,
            '/poker.proto.CashGameTableService/create',
            TableService_pb2.TableSettings,
            TableService_pb2.RequestStatus,
        )
        self.subscribe = grpclib.client.UnaryStreamMethod(
            channel,
            '/poker.proto.CashGameTableService/subscribe',
            google.protobuf.empty_pb2.Empty,
            TableService_pb2.TableUpdate,
        )
        self.start = grpclib.client.UnaryUnaryMethod(
            channel,
            '/poker.proto.CashGameTableService/start',
            google.protobuf.empty_pb2.Empty,
            TableService_pb2.RequestStatus,
        )
        self.stop = grpclib.client.UnaryUnaryMethod(
            channel,
            '/poker.proto.CashGameTableService/stop',
            google.protobuf.empty_pb2.Empty,
            TableService_pb2.RequestStatus,
        )
        self.addPlayer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/poker.proto.CashGameTableService/addPlayer',
            Players_pb2.PlayerJoinRequest,
            TableService_pb2.RequestStatus,
        )
        self.removePlayer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/poker.proto.CashGameTableService/removePlayer',
            Players_pb2.PlayerRemoveRequest,
            TableService_pb2.RequestStatus,
        )
        self.takeAction = grpclib.client.UnaryUnaryMethod(
            channel,
            '/poker.proto.CashGameTableService/takeAction',
            Betting_pb2.BettingActionRequest,
            TableService_pb2.RequestStatus,
        )
